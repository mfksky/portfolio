---
const sendButton = ['Отправить', '/main/icons/icons.svg#send']
---

<script>
	import { createDirectus, rest, readItem, createItem } from '@directus/sdk';

	const directus = createDirectus('http://147.45.246.185:8055')
		.with(rest())
		.with(readItem())
		.with(createItem());

	document
		.getElementById('contactForm')
		.addEventListener('submit', async (e) => {
			e.preventDefault();
			const formData = new FormData(e.target);
			const data = Object.fromEntries(formData);
			data.date = new Date().toISOString().split('.')[0];

			try {
				await directus.request(createItem('contact_messages', data));
				alert('Сообщение успешно отправлено!');
				e.target.reset();
			} catch (error) {
				console.error('Ошибка при отправке сообщения:', error);
				alert('Произошла ошибка при отправке сообщения.');
			}
		});
</script>

<div class="contact__form form-contact">
    <form class="form-contact__form" id="contactForm">
            <div class="form-contact__inputs">
                <input type="text" name="name" placeholder="Ваше имя *" required>
                <input type="email" name="email" placeholder="Ваш email *" required>
            </div>
            <textarea name="message" placeholder="Ваше сообщение *" required></textarea>
            <button class="contact-button" type="submit">
                <span>{sendButton[0]}</span>
                <svg>
                    <use xlink:href={sendButton[1]}></use>
                </svg>
            </button>
    </form>
</div>

<style lang="scss">
    @import '../../styles/assets/vars';
    
    .form-contact {
        // .form-contact__form
        &__form {
            display: flex;
            flex-direction: column;
            gap: 2rem;
        }
        // .form-contact__inputs
        &__inputs {
            display: flex;
            gap: 2rem;
            input {
                flex: 1;
                display: flex;
                align-items: center;
                justify-content: center;
                height: 6rem;
                padding: 0 2rem;
                font-size: 2rem;
                line-height: 100%;
                border: 1px solid var(--borderColor);
                border-radius: 1rem;
                transition: border-color .3s ease;
                &:hover, &:focus {
                    border-color: var(--accentColor1);
                }
            }
        }
        textarea {
            height: 16rem;
            padding: 2rem;
            font-size: 2rem;
            line-height: 100%;
            border: 1px solid var(--borderColor);
            border-radius: 1rem;
            resize: none;
            transition: border-color .3s ease;
            &:hover, &:focus {
                border-color: var(--accentColor1);
            }
        }
        button {
            display: inline-block;
            width: auto;
            svg {
                stroke: var(--fontColor1);
            }
        }
    }
</style>