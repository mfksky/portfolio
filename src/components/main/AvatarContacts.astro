---
const { parentClass, contactNetworks } = Astro.props;
---

<div class={`${parentClass ? parentClass : ''} contacts-avatar`}>
    <button class="contacts-avatar__btn contact-button">
        <span>Связаться со мной</span>
    </button>
    <ul class="contacts-avatar__content">
        {
            contactNetworks.map((item) => (
                <li>
                    <a href={item.url} target="_blank">
                        <svg>
                            <use xlink:href={`/main/icons/icons.svg#${item.icon}`}></use>
                            <title>{item.title}</title>
                        </svg>
                    </a>
                </li>
            ))
        }
    </ul>
</div>

<script>
    import { toggleContacts } from '../../js/main/contactsToggle';
    
    document.addEventListener('DOMContentLoaded', () => {
        toggleContacts('.contacts-avatar__btn', '.contacts-avatar__content');
    });
</script>

<style lang="scss">
    @import '../../styles/assets/vars';

    .contacts-avatar {
        position: relative;
        // .contacts-avatar__btn
        &__btn {
            width: 100%;
        }
        // .contacts-avatar__content
        &__content {
            position: absolute;
            bottom: 6rem;
            right: 0;
            display: flex;
            align-items: center;
            gap: 1rem;
            padding: 1.5rem 0;
            opacity: 0;
            transform: translateY(6.5rem);
            transition: transform .3s ease;
            &._active {
                transform: translateY(0);
                opacity: 1;
            }
            a {
                display: flex;
                align-items: center;
                justify-content: center;
                width: 4rem;
                height: 4rem;
                background-color: var(--bgColor1);
                border: 1px solid var(--borderColor);
                border-radius: .8rem;
                transition: all .3s ease;
                svg {
                    width: 1.8rem;
                    height: 1.8rem;
                    fill: var(--fontColor2);
                    transition: all .3s ease;
                }
            }
            @media (min-width:$md3+px){
                a {
                    &:hover {
                        background-color: var(--fontColor1);
                        border-color: var(--fontColor1);
                        svg {
                            fill: var(--bgColor1);
                        }
                    }
                }
            }
            @media (max-width: 1600px){
                bottom: 5rem;
            }
            @media (max-width:$md4+px){
                a {
                    width: 5rem;
                    height: 5rem;
                }
            }
            @media (max-width:$md5+px){
                bottom: 4rem;
                a {
                    width: 4rem;
                    height: 4rem;
                }
            }
        }
    }

</style>