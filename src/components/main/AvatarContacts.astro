---
const { parentClass, contactNetworks } = Astro.props;
---

<div class={`${parentClass ? parentClass : ''} contacts-avatar`}>
    <button class="contacts-avatar__btn">Связаться со мной</button>
    <ul class="contacts-avatar__content">
        {
            contactNetworks.map((item) => (
                <li>
                    <a href={item.url}>
                        <svg>
                            <use xlink:href={`/main/icons/icons.svg#${item.icon}`}></use>
                            <title>{item.title}</title>
                        </svg>
                    </a>
                </li>
            ))
        }
    </ul>
</div>

<script>
    document.addEventListener('DOMContentLoaded', () => {
        const callBtn = document.querySelector('.contacts-avatar__btn');
        const callContent = document.querySelector('.contacts-avatar__content');

        callBtn.addEventListener('click', () => {
            callBtn.classList.toggle('_active');
            callContent.classList.toggle('_active');
        });
    });
</script>

<style lang="scss">
    @import '../../styles/assets/vars';

    .contacts-avatar {
        position: relative;
        display: inline-block;
        // .contacts-avatar__btn
        &__btn {
            position: relative;
            z-index: 1;
            display: flex;
            align-items: center;
            justify-content: center;
            gap: 1.5rem;
            height: 5rem;
            padding: 0 4rem;
            font-size: 1.3rem;
            line-height: 100%;
            font-weight: 600;
            letter-spacing: 1.5px;
            text-transform: uppercase;
            background-color: var(--accentColor1);
            border-radius: 1rem;
            transition: background-color .3s ease 0s;
            svg {
                width: 1.8rem;
                height: 1.8rem;
                fill: var(--fontColor1);
            }
            &:hover {
                background-color: var(--accentColor2);
            }
        }
        // .contacts-avatar__content
        &__content {
            position: absolute;
            bottom: 5rem;
            right: 0;
            display: flex;
            align-items: center;
            gap: 1rem;
            padding: 1.5rem 0;
            opacity: 0;
            transform: translateY(6.5rem);
            transition: transform .3s ease;
            &._active {
                transform: translateY(0);
                opacity: 1;
            }
            a {
                display: flex;
                align-items: center;
                justify-content: center;
                width: 3.6rem;
                height: 3.6rem;
                background-color: var(--bgColor1);
                border: 1px solid var(--borderColor);
                border-radius: .8rem;
                transition: all .3s ease;
                svg {
                    width: 1.6rem;
                    height: 1.6rem;
                    fill: var(--fontColor2);
                    transition: all .3s ease;
                }
                &:hover {
                    background-color: var(--fontColor1);
                    border-color: var(--fontColor1);
                    svg {
                        fill: var(--bgColor1);
                    }
                }
            }
        }
    }

</style>