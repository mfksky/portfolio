---
import { fetchSEOData } from '../utils/seo'
import Default from '../layouts/Default.astro'
//import Static from '../layouts/Static.astro'
import Header from '../components/main/Header.astro';
import Avatar from '../components/main/Avatar.astro';
import Home from '../components/main/Home.astro';
import Portfolio from '../components/main/Portfolio.astro';
import Stack from '../components/main/Stack.astro';
import Skills from '../components/main/Skills.astro';
import Contact from '../components/main/Contact.astro';

import '../styles/main/style.scss';

const pageId = 'index';
const { lang, title, description, fonts } = await fetchSEOData(pageId);

const parentClass = 'header__contacts';
const contactNetworks = [
	{
		title: 'Telegram', url: 'https://t.me/mfkboy', icon: 'tg'
	},
	{
		title: 'VK', url: 'https://vk.com/mfkboy', icon: 'vk'
	},
];

---
<script>
	import 'lazysizes';
	import Lenis from 'lenis';
  
	document.addEventListener('DOMContentLoaded', function () {
		// GOTO
		const anchors = document.querySelectorAll('a[href^="#"]');
		let gotoOffset;

		function updateOffset() {
			if (window.innerWidth < 991.98) {
				gotoOffset = -30;
			} else if (window.innerWidth < 1600) {
				gotoOffset = -130;
			} else {
				gotoOffset = -160;
			}
		}

		updateOffset();

		anchors.forEach(anchor => {
			anchor.addEventListener('click', (e) => {
				e.preventDefault();

				const targetId = anchor.getAttribute('href');
				const targetElement = document.querySelector(targetId);

				if (targetElement) {
					lenis.scrollTo(targetElement, {
						offset: gotoOffset,
						duration: 1.2,
						easing: (t) => Math.min(1, 1.001 - Math.pow(2, -10 * t)),
					});
				}
			});
		});

		// Rotate img + Smooth scroll init
		const rotatingImage = document.querySelector('.rotating-btn__image');
		const blob1 = document.querySelector('.blob-1');
		const blob2 = document.querySelector('.blob-2');
		const blobs = [blob1, blob2];

		window.lenis = new Lenis();

		lenis.on('scroll', ({ scroll, limit }) => {
			const rotation = (scroll / limit) * 360;
			const scaleX = 1 + (scroll / limit) * 0.5;
			const scaleY = 1 + (scroll / limit) * 0.3;
			const borderRadiusX = 30 + (scroll / limit) * 50;
  			const borderRadiusY = 30 + (scroll / limit) * 30;

			let blur;
			  if (window.innerWidth < 767.98) {
				blur = 120 - (scroll / limit) * 70;
			} else {
				blur = 150 - (scroll / limit) * 70;
			}

			if (rotatingImage) {
				rotatingImage.style.transform = `rotate(${rotation}deg)`;
			}

			const applyTransformations = (element) => {
				element.style.transform = `rotate(${rotation}deg) scaleX(${scaleX}) scaleY(${scaleY})`;
				element.style.borderRadius = `${borderRadiusX}% ${100 - borderRadiusX}% ${borderRadiusY}% ${100 - borderRadiusY}% / ${borderRadiusY}% ${100 - borderRadiusY}% ${borderRadiusX}% ${100 - borderRadiusX}%`;
				element.style.filter = `blur(${blur}px)`;
    		};

			blobs.forEach(blob => {
				if (blob) {
					applyTransformations(blob);
				}
			});
		});

		function raf(time) {
			lenis.raf(time);
			requestAnimationFrame(raf);
		}

		requestAnimationFrame(raf);

		// Scr Items
		const elements = document.querySelectorAll('._scr-item');

		function getDelay(delayString) {
			const delays = delayString.split('/');
			const width = window.innerWidth;
			
			if (delays.length === 1) return delays[0];
			if (width <= 479.98) return delays[4] || delays[0];
			if (width <= 768.98) return delays[3] || delays[0];
			if (width <= 991.98) return delays[2] || delays[0];
			if (width <= 1242) return delays[1] || delays[0];
			return delays[0];
		}

		function checkVisibility() {
			elements.forEach(el => {
				const rect = el.getBoundingClientRect();
				const offset = parseInt(el.getAttribute('data-offset')) || 100;

				if (rect.top <= window.innerHeight - offset && rect.bottom >= 0) {
					const duration = el.getAttribute('data-duration') || '0.6s';
					const delayAttr = el.getAttribute('data-delay') || '0s';
					const delay = getDelay(delayAttr);

					el.style.setProperty('transition-duration', duration);
					el.style.setProperty('transition-delay', delay);
					el.classList.add('_visible');
				}
			});
		}

		checkVisibility();

		function handleResize() {
			updateOffset();
			checkVisibility();
		}

		window.addEventListener('resize', handleResize);
		window.addEventListener('scroll', checkVisibility);
	});

	window.stopLenis = function() {
		if (window.lenis) {
			window.lenis.stop();
		}
	};

	window.startLenis = function() {
		if (window.lenis) {
			window.lenis.start();
		}
	};
</script>

<Default lang={lang} title={title} description={description} fonts={fonts}>
<!-- <Static> -->
	<Header parentClass={parentClass} contactNetworks={contactNetworks} />
	<Avatar parentClass={parentClass} contactNetworks={contactNetworks} />
	<main class="page">
		<Home />
		<Portfolio />
		<Stack />
		<Skills />
		<Contact />
	</main>
<!-- </Static> -->
</Default>